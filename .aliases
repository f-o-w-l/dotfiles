# Detect OS and WSL
OS_NAME="$(uname -s)"
IS_WSL=false
if grep -qEi "(Microsoft|WSL)" /proc/version &> /dev/null ; then
    IS_WSL=true
fi

# ----------------------------------------
# Filesystem browsing
# ----------------------------------------
if [[ "$OS_NAME" == "Darwin" || "$OS_NAME" == "Linux" ]]; then
    alias ls='eza --classify --header --all --git --long'
    alias ll='eza --classify --header --all --git --long'
    alias la='eza --classify --header --all --git --long --sort date --reverse'
    alias lt='eza --classify --header --all --git --long --tree'
else
    alias ls='ls --color=auto -F'
    alias ll='ls --color=auto -lAhF'
    alias la='ls --color=auto -lAhFtr'
    alias lt='ls --color=auto -R'
fi

alias tg='lt | grep '
alias c='clear'
alias cl='c && ll'
alias ca='c && la'
alias l='ls'

# ----------------------------------------
# Filesystem general
# ----------------------------------------
alias whence='type -a'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias df='df -h'

# ncdu2 not supported on macOS, but supports ncdu
if [[ "$OS_NAME" == "Darwin" ]]; then
    alias du='ncdu'
else
    alias du='ncdu2'
fi

alias psg='pst | grep '
# delete empty dirs
alias ded='find . -type d -empty -print0 | xargs -0 -I {} /bin/rm -r "{}"'
# delete images
alias dim="find -type f \( -iname '*.jp*g' -or -iname '*.png' \) -delete"

# ----------------------------------------
# Programs
# ----------------------------------------
alias less='less -r'
alias g++='g++ -std=c++11 -Wall'
alias ns='nordvpn status'
alias dm='docker-machine'
alias dps='docker ps -a'
alias dbu='docker-compose build && docker-compose up -d'
alias drmi='docker rmi $(docker images -a --filter=dangling=true -q) && docker rm $(docker ps --filter=status=exited --filter=status=created -q)'

# Get container IP addresses
dip() {
    docker inspect "$1" | grep IPAddress
}
# Stop and remove all containers
dsra() {
    local ids=$(docker ps -aq)
    if [[ -n "$ids" ]]; then
        docker stop $ids && docker rm $ids
    else
        echo "No containers to stop/remove."
    fi
}
# Remove dangling images and stopped/created containers
drmi() {
    local images=$(docker images -a --filter=dangling=true -q)
    if [[ -n "$images" ]]; then
        docker rmi $images
    else
        echo "No dangling images to remove."
    fi

    local containers=$(docker ps --filter=status=exited --filter=status=created -q)
    if [[ -n "$containers" ]]; then
        docker rm $containers
    else
        echo "No stopped containers to remove."
    fi
}

# ----------------------------------------
# System
# ----------------------------------------
alias pst='pstree -cglpst -C age'
alias pstu='pst -u $USER'

restart_audio() {
    systemctl --user restart pulseaudio
    rm -r ~/.config/pulse
    pulseaudio -k
}

if [[ "$OS_NAME" != "MINGW"* && "$OS_NAME" != "CYGWIN"* && "$OS_NAME" != "MSYS"* ]]; then
    setup_tv_monitor() {
        xrandr \
            --fb 3840x2280 \
            --output eDP-1-1 --primary --mode 1920x1200 --pos 0x0 --rate 60 \
            --output HDMI-0 --mode 1920x1080 --left-of eDP-1-1 --rate 60
    }
fi

# ----------------------------------------
# WSL helpers
# ----------------------------------------
if [[ "$IS_WSL" == true ]]; then
    alias clip='clip.exe'
fi

# ----------------------------------------
# Git
# ----------------------------------------
alias cg='cl && git status'
alias ga='git add'
alias gau='git add --update'
alias gb='git branch'
alias gba='git branch -a'
alias gbd='git branch --delete '
alias gc='git commit'
alias gcm='git commit --message'
# marks and prefixes comment as fix-up. combine
# with `gr -i --autosquash <last commit to retain>` to merge (rebase) fixups
alias gcf='git commit --fixup'
alias gca='git commit --amend --message'
alias gco='git checkout'
alias gcob='git checkout -b'
alias gcoc='git checkout $(git branch --show-current)'
alias gcot='git checkout --track'
alias gcom='git checkout main || git checkout master'
alias gcon='git checkout next'
alias gcod='git checkout dev'
alias gcl='git clean -f'
alias gclx='git clean -fx'
alias gcld='git clean -fd'
alias gd='git diff'
alias gdh='git diff HEAD'
alias gdn='git diff --name-only'
alias gi='git init'
alias glg='git log --graph --oneline --decorate --all'
alias gld='git log --pretty=format:"%h %ad %s" --date=short --all'
alias gm='git merge'
alias gma='git merge --abort'
alias gmc='git merge --continue'
alias gnun='git update-index --no-assume-unchanged'
alias gp='git pull --no-rebase'
alias gpr='git pull --rebase'
alias gpf='git pull --ff-only'
alias gr='git rebase'
alias gres='git reset'
alias gres1='git reset HEAD~1 --soft'
alias grm='git rm'
alias grs='git restore'
alias grss='git restore --staged'
alias gs='git status'
alias gss='git status --short'
alias gst='git stash'
alias gstu='git stash --include-untracked'
alias gsta='git stash apply'
alias gstd='git stash drop'
alias gstl='git stash list'
alias gstp='git stash pop'
alias gsts='git stash save'
alias gun='git update-index --assume-unchanged'
alias gup='git fetch --all && git pull --ff-only'
